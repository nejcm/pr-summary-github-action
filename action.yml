name: "PR commit summary"
description: "Github action that summarizes the PR commits and posts it to notion."
inputs:
  ghToken:
    description: "Github token"
    required: true
  openAiKey:
    description: "Open AI API key.If empty it will be ignored."
    required: false
  openAiOrg:
    description: "Open AI org id."
    required: false
  openAiModel:
    description: "OpenAI model to use (e.g. gpt-4o, gpt-3.5-turbo). Default: gpt-4o"
    required: false
    default: "gpt-4o"
  anthropicKey:
    description: "Anthropic API key. If empty it will be ignored."
    required: false
  anthropicModel:
    description: "Anthropic model to use (e.g. claude-3-opus-20240229, claude-3-5-sonnet-20240620). Default: claude-3-5-sonnet-20240620"
    required: false
    default: "claude-3-5-sonnet-20240620"
  deepseekKey:
    description: "Deepseek API key. If empty it will be ignored."
    required: false
  deepseekModel:
    description: "Deepseek model to use (e.g. deepseek-chat, deepseek-reasoner). Default: deepseek-chat"
    required: false
    default: "deepseek-chat"
  geminiKey:
    description: "Gemini API key. If empty it will be ignored."
    required: false
  geminiModel:
    description: "Gemini model to use (e.g. gemini-2.0-flash, gemini-1.5-pro). Default: gemini-2.0-flash"
    required: false
    default: "gemini-2.0-flash"
  linearKey:
    description: "Linear API key. If empty it will be ignored."
    required: false
  linearViewId:
    description: "Linear View Id."
    required: false
  notionKey:
    description: "Notion API key."
    required: false
  notionDbId:
    description: "Notion Database ID."
    required: false
  prompt:
    description: "Summary prompt"
    required: false
    default: "Provide a detailed summary of the following commit messages in markdown format:"
  file:
    description: "Optionally provide a path to a text file with information to summarize"
    required: false
  changelog:
    description: "Link to the changelog. If empty it will be ignored."
    required: false
  prLink:
    description: "Link to the PR. If empty it will be ignored."
    required: false
  version:
    description: "Release version"
    required: false
outputs:
  summary:
    description: "Release summary"
    value: ${{ steps.summary.outputs.summary }}

branding:
  icon: box
  color: red

runs:
  using: "composite"
  steps:
    - name: ðŸ“„ Get PR commit messages
      shell: bash
      run: |
        BASE_REF="${{ github.event.pull_request.base.ref }}"
        HEAD_SHA="${{ github.event.pull_request.head.sha }}"
        if git show-ref --verify --quiet "refs/remotes/origin/$BASE_REF"; then
          git log origin/$BASE_REF..$HEAD_SHA --pretty=format:"%s" > commit_messages.txt
        else
          echo "Base reference or head SHA does not exist."
          exit 1
        fi
        git log origin/${{ github.event.pull_request.base.ref }}..${{ github.event.pull_request.head.sha }} --pretty=format:"%s" > commit_messages.txt

    - name: ðŸ’¿ Install uv
      uses: astral-sh/setup-uv@v5
      with:
        version: "0.6.2"
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: ðŸ’¿ Install python
      uses: actions/setup-python@v5
      with:
        python-version-file: "${{ github.action_path }}/.python-version"

    - name: ðŸ¦º Install python packages
      shell: bash
      run: uv sync --all-extras --dev

    - name: ðŸ¤– Run
      id: summary
      run: |
        if [ -f commit_messages.txt ]; then
          export COMMITS=$(cat commit_messages.txt)
        else
          echo "commit_messages.txt file does not exist."
        fi
        if [ ! -z "${{ inputs.file }}" ] && [ -f "${{ inputs.file }}" ]; then
          export DATA=$(cat "${{ inputs.file }}")
        fi
        uv run ${{ github.action_path }}/src/main.py
      shell: bash
      env:
        OPENAI_KEY: ${{ inputs.openAiKey }}
        OPENAI_ORG: ${{ inputs.openAiOrg }}
        OPENAI_MODEL: ${{ inputs.openAiModel }}
        ANTHROPIC_KEY: ${{ inputs.anthropicKey }}
        ANTHROPIC_MODEL: ${{ inputs.anthropicModel }}
        DEEPSEEK_KEY: ${{ inputs.deepseekKey }}
        DEEPSEEK_MODEL: ${{ inputs.deepseekModel }}
        GEMINI_KEY: ${{ inputs.geminiKey }}
        GEMINI_MODEL: ${{ inputs.geminiModel }}
        NOTION_KEY: ${{ inputs.notionKey }}
        LINEAR_KEY: ${{ inputs.linearKey }}
        LINEAR_VIEW_ID: ${{ inputs.linearViewId }}
        NOTION_DB_ID: ${{ inputs.notionDbId }}
        CHANGELOG: ${{ inputs.changelog }}
        PR_LINK: ${{ inputs.prLink }}
        VERSION: ${{ inputs.version }}
        PROMPT: ${{ inputs.prompt }}
