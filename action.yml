name: "PR commit summary"
description: "Github action that summarizes the PR commits and posts it to notion, slack, github comment, ..."
inputs:
  ghToken:
    description: "Github token"
    required: true
  openAiKey:
    description: "Open AI API key.If empty it will be ignored."
    required: false
  anthropicKey:
    description: "Anthropic API key. If empty it will be ignored."
    required: false
  linearKey:
    description: "Linear API key. If empty it will be ignored."
    required: false
  linearViewId:
    description: "Linear View Id."
    required: false
  notionKey:
    description: "Notion API key. If empty it will fallback to PR commit messages."
    required: false
  prompt:
    description: "Summary prompt"
    required: false
    default: "Provide a detailed summary of the following commit messages in markdown format:"
  changelog:
    description: "Link to the changelog"
    required: false
  comment:
    description: "Should post a comment to the PR"
    required: false
    default: "true"

branding:
  icon: box
  color: red

runs:
  using: "composite"
  steps:
    - name: 🏷️ Get version
      id: version
      uses: martinbeentjes/npm-get-version-action@v1.3.1
      with:
        path: packages/apps/web-app

    - name: 📄 Get PR commit messages
      shell: bash
      run: |
        git log origin/${{ github.event.pull_request.base.ref }}..${{ github.event.pull_request.head.sha }} --pretty=format:"%s" > commit_messages.txt

    - name: 💿 Setup python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12" # install the python version needed

    - name: 🦺 Install python packages
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 🤖 Run
      id: summary
      run: |
        export COMMITS=$(cat commit_messages.txt)
        python src/main.py
      shell: bash
      env:
        OPENAI_KEY: ${{ inputs.openAiKey }}
        ANTHROPIC_KEY: ${{ inputs.anthropicKey }}
        NOTION_KEY: ${{ inputs.notionKey }}
        LINEAR_KEY: ${{ inputs.linearKey }}
        LINEAR_VIEW_ID: ${{ inputs.linearViewId }}
        CHANGELOG: ${{ inputs.changelog }}
        VERSION: ${{ steps.version.outputs.current-version }}
        PROMPT: ${{ inputs.prompt }}

    - name: 💬 Post summary comment
      if: steps.summary.outcome == 'success' & inputs.comment == 'true'
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        GITHUB_TOKEN: ${{ inputs.ghToken }}
        number: ${{ github.event.pull_request.number }}
        header: "Release Summary"
        message: |
          # Release Summary  
          ${{ env.summary }}
